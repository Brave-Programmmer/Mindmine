---
import BookReader from "../../components/BookReader";
import { doc, getDoc, collection, getDocs } from "firebase/firestore";
import { db } from "../../firebase";
import Layout from "../../layouts/Layout.astro";

type Book = {
  id: string;
  title: string;
  author: string;
  genre: string;
  synopsis: string;
  coverImage: string;
  totalChapters: number;
  createdAt: any;
};

type Chapter = {
  id: string;
  title: string;
  content: string;
  createdAt: any;
};

// Static generation of all book paths
export async function getStaticPaths() {
  const booksSnapshot = await getDocs(collection(db, "books"));
  return booksSnapshot.docs.map((doc) => ({
    params: { id: doc.id },
  }));
}

// Load book and chapters
const { id } = Astro.params;
let book: Book | null = null;
let chapters: Chapter[] = [];

try {
  const docRef = doc(db, "books", id as string);
  const docSnap = await getDoc(docRef);

  if (docSnap.exists()) {
    const bookData = docSnap.data();
    book = { id, ...bookData } as Book;

    const chaptersSnapshot = await getDocs(
      collection(db, "books", id as string, "chapters")
    );
    chapters = chaptersSnapshot.docs.map((doc) => ({
      id: doc.id,
      ...doc.data(),
    })) as Chapter[];
  }
} catch (err) {
  console.error("Error loading book:", err);
}
---

{
  book ? (
    <Layout title={book.title}>
      <head>
        <title>
          {book.title} â€” {book.author}
        </title>
        <meta name="description" content={book.synopsis} />
        <meta property="og:title" content={book.title} />
        <meta property="og:description" content={book.synopsis} />
        <meta property="og:image" content={book.coverImage} />
        <meta property="og:type" content="book" />
      </head>

      <BookReader bookId={id as string} client:load />
    </Layout>
  ) : (
    <Layout title="Book Not Found">
      <section class="text-center py-20 text-gray-600">
        <h1 class="text-4xl font-bold mb-4">ðŸ“š Book Not Found</h1>
        <p>The requested book does not exist or has been deleted.</p>
      </section>
    </Layout>
  )
}
